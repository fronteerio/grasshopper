/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

module.exports = function(client) {
    client.orgUnit = {};

    /**
     * Get an organisational unit
     *
     * @param  {Number}         id                              The id of the organisational unit to retrieve
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-orgunit/lib/rest.js for more information
     */
    client.orgUnit.getOrgUnit = function(id, callback) {
        var url = '/api/orgunit/' + client.util.encodeURIComponent(id);
        client._request(url, 'GET', null, null, callback);
    };

    /**
     * Get the organisational units in an app
     *
     * @param  {Number}         [app]                           The id of the app to get the organisational units for. Defaults to the current app
     * @param  {Boolean}        [includeSeries]                 Whether to include the event series associated to the organisational units. Defaults to `false`
     * @param  {Number}         [parent]                        The id of the parent to retrieve the organisational units for
     * @param  {String[]}       [type]                          The organisational unit type[s] to filter the organisational unit by
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-orgunit/lib/rest.js for more information
     */
    client.orgUnit.getOrgUnits = function(app, includeSeries, parent, type, callback) {
        var url = '/api/orgunit';
        var data = {
            'app': app,
            'includeSeries': includeSeries,
            'parent': parent,
            'type': type
        };
        client._request(url, 'GET', data, null, callback);
    };

    /**
     * Create an organisational unit
     *
     * @param  {String}         displayName                     The name of the organisational unit
     * @param  {Number}         type                            The organisational unit type (e.g. `tripos`, `part`)
     * @param  {Object}         [opts]                          A set of optional parameters
     * @param  {Number}         [opts.app]                      The id of the application that this organisational unit will belong to
     * @param  {String}         [opts.description]              The description of the organisational unit
     * @param  {Number}         [opts.group]                    The id of the group that can manage the organisational unit. Defaults to creating a new group with the current user as a member
     * @param  {Number}         [opts.parent]                   The id of the parent organisational unit
     * @param  {Function}       callback                        Standard callback function
     * @param  {Object}         callback.err                    An error that occurred, if any
     * @param  {Object}         callback.body                   The JSON response from the REST API
     * @param  {Response}       callback.response               The response object as returned by requestjs
     * @see gh-orgunit/lib/rest.js for more information
     */
    client.orgUnit.createOrgUnit = function(displayName, type, opts, callback) {
        opts = opts || {};
        var data = {
            'app': opts.app,
            'description': opts.description,
            'displayName': displayName,
            'group': opts.group,
            'parent': opts.parent,
            'type': type
        };
        client._request('/api/orgunit', 'POST', data, null, callback);
    };
};
