/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var _ = require('lodash');

module.exports = function(client) {
    client.config = {};

    /**
     * Get the configuration object for an application
     *
     * @param  {Number}         [appId]                 The id of the application whose config to retrieve. If left null, retrieve the config of the current application
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-config/lib/rest.js for more information
     */
    client.config.getConfig = function(appId, callback) {
        var url = '/api/config';
        var data = {
            'app': appId
        };
        client._request(url, 'GET', data, null, callback);
    };

    /**
     * Update the configuration object for an application
     *
     * @param  {Number}         [appId]                 The id of the application whose config to update. If left null, update the config of the current application
     * @param  {Object}         update                  The updates to persist
     * @param  {Function}       callback                Standard callback function
     * @param  {Object}         callback.err            An error that occurred, if any
     * @param  {Object}         callback.body           The JSON response from the REST API
     * @param  {Response}       callback.response       The response object as returned by requestjs
     * @see gh-config/lib/rest.js for more information
     */
    client.config.updateConfig = function(appId, update, callback) {
        update = update || {};
        update = _.clone(update);
        update.app = appId;
        var url = '/api/config';
        client._request(url, 'POST', update, null, callback);
    };
};
