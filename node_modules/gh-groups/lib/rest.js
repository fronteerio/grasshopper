/**
 * Copyright (c) 2014 "Fronteer LTD"
 * Grasshopper Event Engine
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var _ = require('lodash');

var GrassHopper = require('gh-core');

var GroupsAPI = require('./api');

/**
 * @REST getGroupMembers
 *
 * Get the members of a group
 *
 * @Server      app
 * @Method      GET
 * @Path        /groups/{id}/members
 * @PathParam   {number}                id                  The id of the group to get the members for
 * @QueryParam  {number}                [limit]             The maximum number of results to retrieve. Default: 10
 * @QueryParam  {number}                [offset]            The paging number of the results to retrieve
 * @Return      {UserList}                                  The members of the group
 */
GrassHopper.appRouter.on('get', '/api/groups/:id/members', function(req, res) {
    GroupsAPI.getGroupMembers(req.ctx, req.params.id, req.query.limit, req.query.offset, function(err, members) {
        if (err) {
            return res.status(err.code).send(err.msg);
        }

        return res.status(200).send({'results': members});
    });
});

/**
 * @REST updateGroupMembers
 *
 * Update the members of a group
 *
 * @Server      app
 * @Method      POST
 * @Path        /groups/{id}/members
 * @PathParam   {number}                id                  The id of the group for which to update the members
 * @BodyParam   {GroupMembersUpdate}    body                Object that describes the group member changes to apply
 * @Return      {void}
 */
GrassHopper.appRouter.on('post', '/api/groups/:id/members', function(req, res) {
    GroupsAPI.updateGroupMembers(req.ctx, req.params.id, req.body, function(err) {
        if (err){
            return res.status(err.code).send(err.msg);
        }

        return res.sendStatus(200);
    });
});

/**
 * @REST lock
 *
 * Lock a group
 *
 * @Server      app
 * @Method      POST
 * @Path        /groups/{id}/lock
 * @PathParam   {number}                id                  The id of the group to lock
 * @Return      {void}
 */
GrassHopper.appRouter.on('post', '/api/groups/:id/lock', function(req, res) {
    res.sendStatus(501);
});

/**
 * @REST releaseLock
 *
 * Release the lock on a group
 *
 * @Server      app
 * @Method      DELETE
 * @Path        /groups/{id}/lock
 * @PathParam   {number}                id                  The id of the group to release the lock from
 * @Return      {void}
 */
GrassHopper.appRouter.on('delete', '/api/groups/:id/lock', function(req, res) {
    res.sendStatus(501);
});
